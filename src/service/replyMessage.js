exports.replyMessage = async ({
  client,
  replyToken,
  messageType,
  profile,
  user,
}) => {
  try {
    await client.replyMessage(
      replyToken,
      message({ messageType, profile, user })
    );
  } catch (e) {
    console.log("replyMessage e =>", e);
  }
};

const message = ({ messageType, profile = {}, user = {}, id = 0 }) => {
  const defaultMessage = {
    MEMBER_REGISTER: {
      type: "flex",
      altText: "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà",
      contents: {
        type: "bubble",
        header: {
          type: "box",
          layout: "vertical",
          contents: [
            {
              type: "text",
              text: "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö üéâüéâ",
              size: "18px",
              weight: "bold",
            },
          ],
        },
        body: {
          type: "box",
          layout: "vertical",
          contents: [
            {
              type: "box",
              layout: "baseline",
              contents: [
                {
                  type: "text",
                  text: "‡∏Ñ‡∏∏‡∏ì",
                  flex: 1,
                },
                {
                  type: "text",
                  text: `${profile.displayName}`,
                  flex: 4,
                },
              ],
            },
            {
              type: "box",
              layout: "baseline",
              contents: [
                {
                  type: "text",
                  text: "üÜî",
                  flex: 1,
                },
                {
                  type: "text",
                  text: `${id}`,
                  flex: 4,
                },
              ],
            },
            {
              type: "text",
              text: "‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏•‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏¥‡∏ô‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞ üéä üéâ",
              wrap: true,
              margin: "xxl",
            },
          ],
        },
        styles: {
          header: {
            backgroundColor: "#35E267",
          },
        },
      },
    },
    MEMBER_EXISTS: {
      type: "text",
      text: `‡∏Ñ‡∏∏‡∏ì ${profile.displayName} ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞`,
    },
    RULES: {
      type: "image",
      originalContentUrl:
        "https://drive.google.com/uc?export=download&id=1W9jVpdtMkGCieVJkblMCMs4x4Iup1Na6",
      previewImageUrl:
        "https://drive.google.com/uc?export=download&id=1W9jVpdtMkGCieVJkblMCMs4x4Iup1Na6",
    },
    HOWTO: {
      type: "image",
      originalContentUrl:
        "https://drive.google.com/uc?export=download&id=18Rhyl57E5QuK3k_UAEyFIKzNA8BHyv5a",
      previewImageUrl:
        "https://drive.google.com/uc?export=download&id=18Rhyl57E5QuK3k_UAEyFIKzNA8BHyv5a",
    },
    RECEIVE_IMAGE: {
      type: "flex",
      altText: `‡∏Ñ‡∏∏‡∏ì ${profile.displayName} ‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô`,
      contents: {
        type: "bubble",
        body: {
          type: "box",
          layout: "vertical",
          contents: [
            {
              type: "text",
              text: `üí´ ‡∏Ñ‡∏∏‡∏ì ${profile.displayName} [ID : ${user.id}] üí´`,
            },
            {
              type: "text",
              text: "‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô üì©",
            },
            {
              type: "text",
              text: `‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ${user.wallet.balance} ‡∏ø üí∞`,
            },
            {
              type: "text",
              text: "‡∏£‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡∏∞ ü´∂",
            },
          ],
        },
      },
    },
    EXCEED_BETLIMIT: {
      type: "text",
      text: `‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡πà‡∏∞‡∏Ñ‡∏∏‡∏ì ${profile.displayName} ‚ö†Ô∏è`,
    },
    INSUFFICIENT_BALANCE: {
      type: "text",
      text: `‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ${user.wallet.balance} ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ ${totalBetAmount}`,
    },
    INVALID_RESULT: {
      type: "text",
      text: `‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏´‡∏°‡πà`,
    },
  };
  return defaultMessage[messageType];
};
